"""Functions to generate locust code.

This module contains functions to generate locust code, *i.e.* it
defines tasks, tasksets and locusts.

"""

from typing import List, Tuple

from . import __version__ as wtgseal_version
from . import dist_name as wtgseal_dist_name
from . import dist_url as wtgseal_dist_url

# from .utils import count_requests, parse_objects

CmdDef = Tuple[int, str]
BlockDef = List[CmdDef]


def setup_header(*, dist: str=wtgseal_dist_name,            # noqa: E252
                 version: str=wtgseal_version,              # noqa: E252
                 url: str=wtgseal_dist_url) -> BlockDef:    # noqa: E252
    header = []
    header.append((0,
                   f'# locust file generated by {dist} (release {version})'))
    header.append((0, f'# See {url} for more information'))
    return header


def setup_import() -> BlockDef:
    imports = []
    imports.append((0, 'from locust import Locust, TaskSet, task'))
    return imports


def setup_task(prefix: str='task', id: int=None,            # noqa: E252
               weight: int=1,                               # noqa: E252
               uri: List[str]=["/", ],                      # noqa: E252
               indlevel: int=0) -> BlockDef:                # noqa: E252
    task = []
    task.append((indlevel, f'@task({weight})'))
    task.append((indlevel, f'def {prefix}{id}(self):'))
    for req in uri:
        task.append((indlevel + 1, f'self.client.get("{req}")'))
    return task


if __name__ == "__main__":
    print(f'{wtgseal_dist_name=}')
    print(f'{wtgseal_version=}')
